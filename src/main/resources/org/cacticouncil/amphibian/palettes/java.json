{
  "mode": "java",
  "palette":
  [
    {
      "name": "General",
      "color": "blue",
      "blocks": [
        {
          "id": "import_group",
          "block": "import java.io.*;",
          "context": "compilationUnit"
        },
        {
          "id": "import_item",
          "block": "import java.util.Scanner;",
          "context": "compilationUnit"
        },
        {
          "id": "class_and_main",
          "block": "public class Main\n{\n    public static void main(String[] args)\n    {\n        //Entry point\n    }\n}",
          "context": "typeDeclaration"
        },
        {
          "id": "declare_assign",
          "block": "int x = 0;",
          "context": "blockStatement"
        },
        {
          "id": "declaration",
          "block": "int x;",
          "context": "blockStatement"
        },
        {
          "id": "assignment",
          "block": "x = 1;",
          "context": "blockStatement"
        },
        {
          "id": "comment",
          "block": "//Comment\n"
        }
      ]
    },
    {
      "name": "Classes",
      "color": "purple",
      "blocks":
      [
        {
          "id": "class_declaration",
          "block": "public class ClassName\n{\n    public ClassName(int param)\n    {\n        //Constructor\n    }\n}",
          "context": "typeDeclaration"
        },
        {
          "id": "static_method",
          "block": "public static int methodName(int param1)\n{\n    return 0;\n}",
          "context": "classBodyDeclaration"
        },
        {
          "id": "instance_method",
          "block": "public int methodName(int param1)\n{\n    return 0;\n}",
          "context": "classBodyDeclaration"
        },
        {
          "id": "static_variable",
          "block": "public static int i = 0;",
          "context": "classBodyDeclaration"
        },
        {
          "id": "instance_variable",
          "block": "public int i = 0;",
          "context": "classBodyDeclaration"
        },
        {
          "id": "object_allocation",
          "block": "ClassName obj = new ClassName(param);",
          "context": "blockStatement"
        },
        {
          "id": "method_invocation",
          "block": "ClassName.methodName(param1);",
          "context": "statement"
        }
      ]
    },
    {
      "name": "Selection",
      "color": "orange",
      "blocks":
      [
        {
          "id": "if",
          "block": "if (x == y)\n{\n    \n}",
          "context": "statement"
        },
        {
          "id": "if_else",
          "block": "if (x == y)\n{\n    \n}\nelse\n{\n    \n}",
          "context": "statement"
        },
        {
          "id": "if_elseif_else",
          "block": "if (x == y)\n{\n    \n}\nelse if (x > y)\n{\n    \n}\nelse\n{\n    \n}",
          "context": "statement"
        },
        {
          "id": "switch",
          "block": "switch (x)\n{\n    case 0:\n    break;\n    default:\n    break;\n}",
          "context": "statement"
        }
      ]
    },
    {
      "name": "Loops",
      "color": "deeporange",
      "blocks":
      [
        {
          "id": "for",
          "block": "for(int i = 0; i < x; i++)\n{\n    \n}",
          "context": "statement"
        },
        {
          "id": "for_each",
          "block": "for(int i : containerVariable)\n{\n    \n}",
          "context": "statement"
        },
        {
          "id": "while",
          "block": "while(0 == 0)\n{\n    \n}",
          "context": "statement"
        },
        {
          "id": "do_while",
          "block": "do        \n{\n    \n}\nwhile(0 == 0);",
          "context": "statement"
        },
        {
          "id": "break",
          "block": "break;",
          "context": "statement"
        },
        {
          "id": "continue",
          "block": "continue;",
          "context": "statement"
        }
      ]
    },
    {
      "name": "Logic",
      "color": "cyan",
      "blocks":
      [
        {
          "id": "equal",
          "block" : "(x == y)",
          "context" : "parExpression"
        },
        {
          "id": "not_equal",
          "block" : "(x != y)",
          "context" : "parExpression"
        },
        {
          "id": "less_than",
          "block" : "(x < y)",
          "context" : "parExpression"
        },
        {
          "id": "less_or_equal",
          "block" : "(x <= y)",
          "context" : "parExpression"
        },
        {
          "id": "greater_than",
          "block" : "(x > y)",
          "context" : "parExpression"
        },
        {
          "id": "greater_or_equal",
          "block" : "(x >= y)",
          "context" : "parExpression"
        },
        {
          "id": "and",
          "block" : "(x && y)",
          "context" : "parExpression"
        },
        {
          "id": "or",
          "block" : "(x || y)",
          "context" : "parExpression"
        },
        {
          "id": "not",
          "block" : "(!x)",
          "context" : "parExpression"
        }
      ]
    },
    {
      "name": "Arithmetic",
      "color": "teal",
      "blocks":
      [
        {
          "id": "parens",
          "block" : "(x)",
          "context" : "parExpression"
        },
        {
          "id": "addition",
          "block" : "(x + y)",
          "context" : "expression"
        },
        {
          "id": "subtraction",
          "block" : "(x - y)",
          "context" : "expression"
        },
        {
          "id": "mutiply",
          "block" : "(x * y)",
          "context" : "expression"
        },
        {
          "id": "divide",
          "block" : "(x / y)",
          "context" : "expression"
        },
        {
          "id": "modulo",
          "block" : "(x % y)",
          "context" : "expression"
        },
        {
          "id": "post_increment",
          "block" : "(x++)",
          "context" : "expression"
        },
        {
          "id": "post_decrement",
          "block" : "(x--)",
          "context" : "expression"
        },
        {
          "id": "pre_increment",
          "block" : "(++x)",
          "context" : "expression"
        },
        {
          "id": "pre_decrement",
          "block" : "(--x)",
          "context" : "expression"
        },
        {
          "id": "ternary",
          "block": "(x > y ? x : y)",
          "context": "expression"
        },
        {
          "id": "plus_eq",
          "block" : "x += 1;",
          "context" : "statement"
        },
        {
          "id": "minus_eq",
          "block" : "x -= 1;",
          "context" : "statement"
        },
        {
          "id": "mult_eq",
          "block" : "x *= 1;",
          "context" : "statement"
        },
        {
          "id": "div_eq",
          "block" : "x /= 1;",
          "context" : "statement"
        },
        {
          "id": "mod_eq",
          "block" : "x %= 1;",
          "context" : "statement"
        }
      ]
    },
    {
      "name": "Text IO",
      "color": "green",
      "blocks":
      [
        {
          "id": "system_out_println",
          "block" : "System.out.println(\"Message with newline\");",
          "context" : "statement"
        },
        {
          "id": "system_out_print",
          "block" : "System.out.print(\"Message without newline\");",
          "context" : "statement"
        },
        {
          "id": "new_scanner",
          "block" : "Scanner myScanner = new Scanner(System.in);",
          "context" : "blockStatement"
        },
        {
          "id": "scanner_next",
          "block" : "input = myScanner.next();",
          "context" : "statement"
        },
        {
          "id": "scanner_nextint",
          "block" : "input = myScanner.nextInt();",
          "context" : "statement"
        },
        {
          "id": "scanner_nextdouble",
          "block" : "input = myScanner.nextDouble();",
          "context" : "statement"
        },
        {
          "id": "scanner_nextline",
          "block" : "input = myScanner.nextLine();",
          "context" : "statement"
        }
      ]
    },
    {
      "name": "Math Library",
      "color": "darkgreen",
      "blocks":
      [
        {
          "id": "pow",
          "block" : "input = Math.pow(x, y);",
          "context" : "statement"
        },
        {
          "id": "sqrt",
          "block" : "input = Math.sqrt(x);",
          "context" : "statement"
        },
        {
          "id": "log",
          "block" : "input = Math.log(x);",
          "context" : "statement"
        },
        {
          "id": "floor",
          "block" : "input = Math.floor(x);",
          "context" : "statement"
        },
        {
          "id": "ceil",
          "block" : "input = Math.ceil(x);",
          "context" : "statement"
        },
        {
          "id": "max",
          "block" : "input = Math.max(x);",
          "context" : "statement"
        },
        {
          "id": "min",
          "block" : "input = Math.min(x);",
          "context" : "statement"
        },
        {
          "id": "abs",
          "block" : "input = Math.abs(x);",
          "context" : "statement"
        },
        {
          "id": "round",
          "block" : "input = Math.round(x);",
          "context" : "statement"
        },
        {
          "id": "random",
          "block" : "input = Math.random();",
          "context" : "statement"
        },
        {
          "id": "sine",
          "block" : "input = Math.sin(x);",
          "context" : "statement"
        },
        {
          "id": "cosine",
          "block" : "input = Math.cos(x);",
          "context" : "statement"
        },
        {
          "id": "tanget",
          "block" : "input = Math.tan(x);",
          "context" : "statement"
        },
        {
          "id": "toradians",
          "block" : "input = Math.toRadians(x);",
          "context" : "statement"
        },
        {
          "id": "todegrees",
          "block" : "input = Math.toDegrees(x);",
          "context" : "statement"
        }
      ]
    }
  ]
}
